x-select{
	& > button{
		width: 100%;
		margin-bottom: calc(var(--padding) * 2);
	}

	& > main{
		background-color: var(--color-main-tint-1);
		width: 100%;
		padding: var(--padding);
		border-radius: var(--radius);

		display: none;
		flex-direction: column;
		gap: calc(var(--gap) / 2);

		&.show{
			display: flex;
		}

		& > section{
			background-color: var(--color-main-tint-2);
			padding: var(--padding);
			border-radius: var(--radius);

			&#optionsSelected{
				display: none;
				flex-wrap: wrap;
				flex-direction: row;
				gap: calc(var(--gap) / 2);

				&.show{
					display: flex;
				}

				& > div{
					cursor: pointer;
					display: none;
					background-color: var(--color-main-tint-3);
					width: auto;
					height: auto;
					padding: var(--padding);
					border-radius: var(--radius);
					transition: var(--transition-velocity) ease-in-out background-color;

					&:hover{
						user-select: none;
						background-color: var(--color-main-tint-4);
					}
				}
			}

			&#search{
			}

			&#optionsToSelect{
				max-height: 250px;
				overflow: scroll;

				display: flex;
				flex-direction: column;
				gap: calc(var(--gap) / 2);

				&.hide{
				display: none;
				}

				& > div{
					cursor: pointer;
					background-color: var(--color-main-tint-3);
					width: auto;
					height: auto;
					padding: var(--padding);
					border-radius: var(--radius);
					transition: var(--transition-velocity) ease-in-out background-color;

					&:hover{
						user-select: none;
						background-color: var(--color-main-tint-4);
					}
				}
			}
		}
	}
}

x-urgent{
	& > dialog{
		pointer-events: none;

		opacity: 0;

		background-color: var(--color-main-tint-4);

		min-width: 40px;
		border: 0px;
		border-radius: var(--radius);
		box-shadow: var(--shadow);

		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%) scale(0.8);

		transition: var(--transition-velocity) ease-in-out;
		transition-property: transform, opacity;

		&::backdrop{
			/* No access to css variables inside ::backdrop */
			transition: 200ms ease-in-out;
			transition-property: opacity;

			opacity: 0;
			background-color: rgba(0, 0, 0, 0.6);
			backdrop-filter: blur(10px);
		}

		&[opening]{
			pointer-events: all;

			opacity: 1;
			transform: translate(-50%, -50%) scale(1);

			&::backdrop{
				opacity: 1;
			}
		}

		& > button{
			width: 30px;
			height: 30px;

			padding: 2px;

			position: fixed;
			top: 5px;
			right: 5px;
		}

		& > main{
			width: auto;
			max-width: 80vw;

			height: auto;
			max-height: 80vh;

			overflow: hidden;
			overflow-y: scroll;

			padding: var(--padding);
			padding-top: 40px;

			display: grid;
			place-items: center;

			@media (width <= 600px){
				max-width: 90dvw;
				max-height: 90dvh;
			}
		}
	}

	& > trigger{
		cursor: pointer;

		&:empty{
			pointer-events: none;
		}
	}
}

x-tooltip{
	& > content{
		pointer-events: none;

		display: block;
		opacity: 0;
		background-color: hsla(var(--color-main-hue), 10%, 10%, 1);
		color: white;
		font-size: 0.7rem;

		max-width: 40vw;
		width: max-content;
		height: max-content;

		padding: var(--padding);
		border-radius: var(--radius);
		box-shadow: var(--shadow);

		position: absolute;
		z-index: var(--z-tooltip);

		transition: var(--transition-velocity) ease-in-out;
		transition-property: opacity;

		&.show{
			pointer-events: all;
			opacity: 1;
		}
	}
}

x-link{
	cursor: pointer;
	&:not([class]){
		color: var(--color-text-secondary);
		&:hover{ color: var(--color-text-error); }
	}
}

@layer x_marquee {
	x-marquee {
		width: 100%;
		overflow: hidden;
		mask-image: linear-gradient(to right, transparent, black 10%, black 90%, transparent 100%);

		&:hover {
			& > row {
				animation-play-state: paused;
			}
		}

		& > row {
			animation: x_marquee_animation linear infinite;
			animation-duration: 4s;

			& > * {
				flex-shrink: 0;
			}
		}
	}

	@keyframes x_marquee_animation {
		0% { transform: translateX(0);  }
		100% { transform: translateX(-100%); }
	}
}


x-tooltip {
	position: absolute;
	top: anchor(bottom);
	left: anchor(center);
	z-index: var(--z-tooltip);
	transform: translate(-50%, var(--padding)) scale(0.5);

	overflow: hidden;
	pointer-events: none;
	opacity: 0;
	transition: var(--transition-velocity);
	transition-property: opacity, transform;
	will-change: opacity, transform;

	background-color: var(--color-hsla-0-0-100-0-1);
	color: var(--color-text-primary);
	border-radius: var(--radius);
	border: 1px solid var(--color-main-tint-2);
	box-shadow: var(--shadow);
	backdrop-filter: blur(var(--blur));

	display: grid;
	place-items: center;

	&.show {
		pointer-events: all;
		opacity: 1;
		transform: translate(-50%, var(--padding)) scale(1);
	}
}


/* <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Simple CSS-Only Horizontal Scroll</title>
  <style>
    /* The scroll container */
    .scroll-container {
      width: 100%;
      overflow: hidden; /* Hide the scrollbar but keep overflow content */
      position: relative;
      margin: 20px 0;
    }

    /* The inner content that will be animated */
    .scroll-content {
      display: flex;
      animation: scrollX 20s linear infinite; /* Change 20s to adjust speed */
    }

    /* Animation keyframes for horizontal movement */
    @keyframes scrollX {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(-100%); /* Move left by the width of content */
      }
    }

    /* Optional: Pause animation on hover */
    .scroll-container:hover .scroll-content {
      animation-play-state: paused;
    }

    /* Demo items styling */
    .item {
      flex: 0 0 auto;
      width: 250px;
      height: 150px;
      margin-right: 20px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 24px;
      color: white;
    }

    /* For a seamless loop, we duplicate the content */
    .scroll-content {
      padding-right: 20px; /* Match the margin-right of items */
    }

    .scroll-content .item {
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
  </style>
</head>
<body>
  <h1>Simple CSS-Only Horizontal Scroll Animation</h1>

  <div class="scroll-container">
    <div class="scroll-content">
      <!-- Original items -->
      <div class="item" style="background-color: #3498db;">Item 1</div>
      <div class="item" style="background-color: #e74c3c;">Item 2</div>
      <div class="item" style="background-color: #2ecc71;">Item 3</div>
      <div class="item" style="background-color: #f39c12;">Item 4</div>
      <div class="item" style="background-color: #9b59b6;">Item 5</div>
      <div class="item" style="background-color: #1abc9c;">Item 6</div>

      <!-- Duplicated items for seamless loop -->
      <div class="item" style="background-color: #3498db;">Item 1</div>
      <div class="item" style="background-color: #e74c3c;">Item 2</div>
      <div class="item" style="background-color: #2ecc71;">Item 3</div>
      <div class="item" style="background-color: #f39c12;">Item 4</div>
      <div class="item" style="background-color: #9b59b6;">Item 5</div>
      <div class="item" style="background-color: #1abc9c;">Item 6</div>
    </div>
  </div>

  <p>Hover over the scrolling items to pause the animation.</p>
</body>
</html> */
