:root{
	--z-minus: -1;
	--z-body: 1;
	--z-footer: 2;
	--z-main: 3;
	--z-header: 4;
	--z-menuHamburgerButton: 5;
	--z-layers: 6;
	--z-cover: 7;
	--z-modal: 8;
	--z-menu: 9;
	--z-tooltip: 10; /* Will move to css anchor positioning */
	--z-toasts: 11;
	--z-loading: 12;
	--z-urgent: 13;

	--header-height: 2rem;
	--footer-height: 2rem;
	--menu-width: 300px;

	--color-cover: rgba(0, 0, 0, 0.6);
}

body{
	font-family: Quicksand;
	padding-top: var(--header-height);

	& > div#root{
		& > main{
			display: grid;
			justify-items: center;

			width: 100vw;
			min-height: calc(100dvh - var(--header-height));

			opacity: 0;
			margin-top: 20px;

			&.show{
				transition: calc(var(--transition-velocity) * 2) ease-in-out;
				transition-property: opacity, transform, margin;

				opacity: 1;
				margin-top: 0px;
			}
		}

		& > footer{
			background-color: var(--color-main-tint-2);

			color: var(--color-text-primary);
			font-size: 0.7rem;

			width: 100%;
			height: var(--footer-height);

			display: grid;
			place-items: center;

			&.hide{ display: none; }
		}
	}


	& > header{
		background-color: var(--color-main);
		color: white;
		/* NOTE: We need to make header text color dynamic. We use contrast-color(). This feature is coming soon. */

		width: 100%;
		height: var(--header-height);

		position: fixed;
		top: 0px;
		left: 0px;
		z-index: var(--z-header);

		display: grid;
		place-items: center;

		&.hide{
			display: none;
		}
	}

	/* If header is empty */
	&:has(header:empty){
		padding-top: 0px;

		& > header{
			display: none;
		}

		& > main{
			min-height: 100dvh;
		}
	}

	& > x-svg{
		&[for=show_menu]{
			font-size: 2rem;
			position: fixed;
			top: 0px;
			left: 0px;
			z-index: var(--z-menuHamburgerButton);
		}
	}

	& > menu{
		--menu-padding: 5px;

		font-size: 1.2rem;

		background-color: hsla(var(--color-main-hue), 10%, 25%, 0.1);
		backdrop-filter: blur(100px);
		-webkit-backdrop-filter: blur(100px);
		height: 100dvh;
		width: var(--menu-width);

		overflow-y: scroll;

		display: grid;
		grid-template-rows: auto 2fr auto;
		justify-items: start;

		position: fixed;
		z-index: var(--z-menu);
		top: 0;
		left: 0;
		transform: translateX(-100%);
		transition-duration: var(--transition-velocity);
		transition-timing-function: ease;
		transition-property: transform;

		&.show{transform: translateX(0px);}

		&.always_open_mode{
			@media (width > 600px){
				transform: translateX(0px);
				background-color: hsla(var(--color-main-hue), 10%, 20%, 1);
			}
		}

		& > header{
			width: 100%;
			padding: calc(var(--menu-padding) * 2);

			display: flex;
			flex-direction: row;
			justify-content: space-between;

			& > x-svg{
				&[for=menu_close_button_on_mobile]{
					display: none;

					@media (width <= 600px){
						display: block;
					}
				}
			}
		}

		& > main{
			width: 100%;
			padding: calc(var(--menu-padding) * 2);
			overflow-y: scroll;

			display: flex;
			flex-direction: column;

			& section{
				&.container{
					display: flex;
					flex-direction: column;
					margin-top: var(--menu-padding);

					& > section{
						&.parent_menu{
							display: flex;
							flex-direction: row;
							justify-content: space-between;
							align-items: center;

							border: 1px solid transparent;
							border-radius: var(--radius);
							padding: var(--menu-padding) calc(var(--menu-padding) * 2.5);

							transition: var(--transition-velocity) ease-in-out;
							transition-property: background-color, border;

							&:where([active], :hover){background-color: hsla(var(--color-main-hue), 10%, 25%, 0.3);}

							&:where([active]){border: 1px solid white;}

							& > a{
								width: 100%;
								display: flex;
								flex-direction: row;
								align-items: center;
								gap: var(--gap);

								color: white;
								font-size: 1em;
							}

							& > x-svg{
								&[for=toggle_sub_menu]{
									transition: var(--transition-velocity) ease-in-out transform;
									transform: rotate(90deg);
									&.open{transform: rotate(0deg);}
								}
							}
						}

						&.sub_menu{
							font-size: 0.94em;

							display: none;

							background-color: hsla(var(--color-main-hue), 10%, 25%, 0.2);

							margin-top: 5px;
							padding: calc(var(--menu-padding) * 2);
							border-radius: var(--radius);

							&:empty{display: none;}

							&.show{display: block;}
						}

						/* If sub_menu is empty */
						&:has(+ .sub_menu:empty){
							/* Do not show arrow icon */
							& > x-svg[for=toggle_sub_menu]{display: none;}

							/* If .parent_menu is a blank button for .sub_menu then do not display */
							&.parent_menu:has(a[href=""]){
								&.parent_menu{display: none;}
							}
						}
					}
				}
			}
		}

		& > footer{}

		@media (width <= 600px){
			width: 100vw;

			& > header{
				& > x-svg[for=toggle_always_open_mode]{display: none;}
			}
		}
	}

	/* If menu is on always open mode */
	&:has(menu.always_open_mode){
		& > main, & > header, & > footer{
			@media (width > 600px){
				width: calc(100% - var(--menu-width));
				margin-left: var(--menu-width);
			}
		}
	}

	& > x-layers {

		& > layer {
			width: 95%;
			height: 88%;

			padding: var(--padding);
			border-radius: var(--radius);

			position: fixed;
			left: 50%;
			bottom: 0;
			z-index: var(--z-layer);
			background-color: var(--color-main-tint-2);
			pointer-events: auto;

			opacity: 0;
			transform: translate(-50%, 100%) scale(1);
			transition: bottom 0.4s ease-in-out, transform 0.4s ease-in-out, opacity 0.3s ease-in-out;

			&.show {
				opacity: 1;

				&:nth-last-of-type(1) {
					bottom: 10px;
					transform: translate(-50%, 0) scale(0.9);
					z-index: 12;
				}

				&:nth-last-of-type(2) {
					bottom: 45px;
					transform: translate(-50%, 0) scale(0.85);
					z-index: 11;
				}

				&:nth-last-of-type(3) {
					bottom: 80px;
					transform: translate(-50%, 0) scale(0.8);
					z-index: 10;
				}

				&:nth-last-of-type(n+4) {
					transition: none;
					bottom: 80px;
					transform: translate(-50%, 0) scale(0.8);
					z-index: 9;
				}

				&:nth-last-of-type(n+5) {
					opacity: 0;
					visibility: hidden;
					transition: none;
				}
			}

			&.closing {
				bottom: 0 !important;
				transform: translate(-50%, 100%) scale(1) !important;
				opacity: 0 !important;
			}

			& > x-svg {
				position: absolute;
				top: 5px;
				right: 5px;
			}
		}

		& > cover {
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: rgba(0, 0, 0, 0.5);
			opacity: 0;
			transition: opacity 0.5s ease-in-out;
			pointer-events: none;

			&.show {
				opacity: 1;
				pointer-events: auto;

				&:nth-last-of-type(1) { z-index: 11; }

				&:nth-last-of-type(2) { z-index: 10; }

				&:nth-last-of-type(3) { z-index: 9; }

				&:nth-last-of-type(4) {	z-index: 8; }

				&:nth-last-of-type(n+5) {
					opacity: 0;
					visibility: hidden;
				}
			}

			&.closing {
				opacity: -1;
				transition: opacity 0.3s ease-in-out;
			}
		}
	}

	& > cover{
		pointer-events:auto;

		background: var(--color-cover);
		backdrop-filter: blur(var(--blur));
		-webkit-backdrop-filter: blur(var(--blur));
		opacity: 0;
		width: 100vw;
		height: 100vh;

		position: fixed;
		top: 0px;
		left: 0px;
		z-index: var(--z-minus);

		transition: var(--transition-velocity) opacity;
	}

	& > modal{
		pointer-events: none;

		opacity: 0;

		background-color: var(--color-main-tint-2);

		min-width: 40px;
		border: 2px solid transparent;
		border-radius: var(--radius);
		box-shadow: var(--shadow);

		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%) scale(0.8);
		z-index: var(--z-modal);

		transition: var(--transition-velocity) ease-in-out;
		transition-property: transform, opacity, border;

		&.show{
			pointer-events: all;
			opacity: 1;
			transform: translate(-50%, -50%) scale(1);
		}

		& > x-svg{
			position: fixed;
			top: 5px;
			right: 5px;
		}

		& > main{
			width: auto;
			max-width: 90dvw;

			height: auto;
			max-height: 90dvh;

			overflow: hidden;
			overflow-y: scroll;

			padding: var(--padding);
			padding-top: 2rem;

			@media (width <= 600px){
				width: 90dvw;
			}
		}
	}

	& > toasts{
		height: auto;
		max-height: 100vh;
		width: 400px;
		padding: var(--padding);
		padding-bottom: calc(var(--padding) * 4);

		overflow-x: hidden;
		overflow-y: scroll;

		display: flex;
		flex-direction: column-reverse;
		gap: var(--gap);

		position: fixed;
		top: 0px;
		right: 0px;
		z-index: var(--z-toasts);

		&:empty{
		padding: 0px;
		}

	}
}

@media (width <= 600px){
	body{
		& > toasts{
			width: 100vw;
			gap: 5px;
		}

		& > main{
			height: calc(100dvh - var(--header-height));
			overflow: scroll;
		}
	}
}

@layer observer_animations{
	.observe{
		--duration: 500ms;
		--timing-function: ease-in-out;
		--delay: 250ms;

		transition-duration: var(--duration);
		transition-timing-function: var(--timing-function);
		transition-delay: var(--delay);
		transition-property: opacity transform;

		&.observer_animation_v1{
			opacity: 0;
			filter: blur(20px);
			transform: translateY(100px);

			&.observed {
				opacity: 1;
				filter: blur(0px);
				transform: translateX(0);
			}
		}

		&.observer_animation_v2{
			opacity: 0;

			&.observed {
				opacity: 1;
			}
		}
	}
}

@layer loading_on_element{
	.loading-on-element{
		position: relative;
		pointer-events: none !important;
		user-select: none !important;
		overflow: hidden !important;
		border: none !important;

		&::before{
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: light-dark(rgba(255, 255, 255, 0.6), rgba(0, 0, 0, 0.6));
			z-index: 1;
		}

		&::after{
			content: '';
			width: 20px;
			height: 20px;
			position: absolute;
			z-index: 2;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			border: 2px solid light-dark(#fff, #000);
			border-top: 2px solid var(--color-main);
			border-radius: 50%;
			animation: HTML_loading_spin 1s linear infinite;
		}

		&.loading-on-element-bg-unset{
			&::before{
				background-color: unset;
			}
		}
	}

	@keyframes HTML_loading_spin {
		0% {transform: translate(-50%, -50%) rotate(0deg);}
		100% {transform: translate(-50%, -50%) rotate(360deg);}
	}
}
